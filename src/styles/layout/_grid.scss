@use "sass:math";

// Mixins
@mixin make-container($padding-x: $grid-gutter) {
  width: 100%;
  padding-right: $padding-x;
  padding-left: $padding-x;
  margin-right: auto;
  margin-left: auto;
}

@mixin make-row($gutter: $grid-gutter) {
  display: flex;
  flex-wrap: wrap;
  margin-right: -$gutter / 2;
  margin-left: -$gutter / 2;
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  max-width: percentage($size / $columns);
  padding-right: math.div($grid-gutter, 2) or calc($grid-gutter / 2);
  padding-left: math.div($grid-gutter, 2) or calc($grid-gutter / 2);
}

// Grid
.container {
  @include make-container();

  @each $breakpoint, $value in $breakpoints {
    @media (min-width: $value) {
      @include make-container();
    }
  }
}

.row {
  @include make-row();
}

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    @include make-col($i);
  }

  @each $breakpoint, $value in $breakpoints {
    @media (min-width: $value) {
      .col-#{$breakpoint}-#{$i} {
        @include make-col($i);
      }
    }
  }
}

// Utilities
@each $breakpoint, $value in $breakpoints {
  @media (min-width: $value) {



    // Margin
    .m-#{$breakpoint}-0 {
      margin: 0;
    }
    .mt-#{$breakpoint}-0 {
      margin-top: 0;
    }
    .mr-#{$breakpoint}-0 {
      margin-right: 0;
    }
    .mb-#{$breakpoint}-0 {
      margin-bottom: 0;
    }
    .ml-#{$breakpoint}-0 {
      margin-left: 0;
    }

    // Padding
    .p-#{$breakpoint}-0 {
      padding: 0;
    }
    .pt-#{$breakpoint}-0 {
      padding-top: 0;
    }
    .pr-#{$breakpoint}-0 {
      padding-right: 0;
    }
    .pb-#{$breakpoint}-0 {
      padding-bottom: 0;
    }
    .pl-#{$breakpoint}-0 {
      padding-left: 0;
    }
  }
}
